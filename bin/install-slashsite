#!/usr/bin/perl -w 
use strict;
use Digest::MD5 'md5_hex';
use Slash::DB;

# This is the uber install script.
# -Brian (brian@tangent.org)


my $prefix = "/usr/local/slash";
my(	$user,
	$owner,
	$password,
	$username,
	$realname,
	$email,
	$dbh,
	@create,
	$sql,
	@sql,
	$hostname,
	@directories,
	@binaries,
	$httpd,
	$uname,
	%slash_sites,
	$sitename
);

my @standard_http = qw(
	PerlModule Apache::SIG
	PerlModule Apache::DBI
	PerlModule Slash::Apache
	PerlModule Slash::Apache::User
	PerlModule Slash::Apache::Log
	PerlAccessHandler Slash::Apache::User
	PerlLogHandler Slash::Apache::Log
	PerlModule CGI
	PerlHandler Apache::Registry
	PerlSetupEnv On
	PerlSetEnv TZ GMT
);

unless ($ARGV[0]) {
	print "You need to give us a DBIx::Password virtual name.\n";
	exit;
}

eval { require DBIx::Password };

if ($@) {
	print "Doesn't look like you have Bundle::Slash installed.
Run the CPAN tool and install Bundle::Slash.\n";
	exit;
}

$user = $ARGV[0];

$dbh = DBIx::Password->connect($user);

unless ($dbh) {
	print qq[The virtual user "$user" doesn't exist.\n];
	exit;
}

if (open(APXS, 'apxs -q SYSCONFDIR |')) {
	($httpd) = <APXS>;
	close(APXS);
}

unless ($httpd) {
	print "Ok, we couldn't find apxs so you won't have the option
of us fixing your httpd.conf for you.\n";
} else {
	$httpd .= '/httpd.conf';
}

# Defaulting to the only theme at the moment
open(CREATE, "< $prefix/sql/mysql/schema.sql")
	or die "Can't open $prefix/sql/mysql/schema.sql: $!.\n";
while (<CREATE>) {
	chomp;
	next if /^#/;
	next if /^$/;
	next if /^ $/;
	push @create, $_;
}
close (CREATE);

$sql = join '', @create;
@sql = split /;/, $sql;



print "What is name of your slashsite (e.g., www.slashdot.org)?\n";
chomp($hostname = <STDIN>);
print "What user would you like to run your slashcode site as (nobody is default)?\n";
chomp($owner = <STDIN>);
$owner ||= 'nobody';

# We also need to really be determining driver here and 
# picking the right schema. Having it loop through
# the themes directory would give us a list
print "Which theme do you want to use (skipping since we only have one theme)?\n";
my $theme = "$prefix/themes/slashcode";

open(DUMP,"< $theme/sql/mysql/datadump.sql")
	or die "Can't open $theme/sql/mysql/datadump.sql: $!.\n";
while(<DUMP>) {
	next unless /^INSERT/;
	chomp;
	s/(?:www\.)?example\.com/$hostname/g;
	push @sql, $_;
}
close(DUMP);

open(DUMP,"< $theme/sql/mysql/prep.sql")
	or die "Can't open $theme/sql/mysql/prep.sql: $!.\n";
while(<DUMP>) {
	chomp;
	push @sql, $_;
}
close(DUMP);

for (@sql) {
	next unless $_;
	unless ($dbh->do($_)) {
		print "Failed on :$_:\n";
	}
}

print "OK, I am planning on user $hostname as the unique name for the slashcode site.
If this is not ok, you need to fill in something else here. [$hostname]\n";
chomp($sitename = <STDIN>);
$sitename ||= $hostname;

$dbh->do("UPDATE vars SET value = '$prefix/$sitename/logs' WHERE name = 'logdir'");
$dbh->do("UPDATE vars SET value = '$prefix/$sitename/htdocs' WHERE name = 'basedir'");
$dbh->do("UPDATE vars SET value = '$prefix/$sitename' WHERE name = 'datadir'");

system("mkdir $prefix/$sitename");
system("mkdir $prefix/$sitename/logs");
system("mkdir $prefix/$sitename/htdocs");
system("mkdir $prefix/$sitename/backups");
system("mkdir $prefix/$sitename/sbin");
system("cp -r $theme/htdocs/* $prefix/$sitename/htdocs");

$dbh->disconnect;

my $slashdb = Slash::DB->new($ARGV[0]);

print "Ok, we need to create an admin account, give us a name (8 characters only please).\n";
chomp($username = <STDIN>);
print "What is the email address of the account?\n";
chomp($email = <STDIN>);

my $uid = $slashdb->createUser($username, $email, $username);

print "What is the password for the account?\n";
chomp($password = <STDIN>);

$slashdb->setUser($uid, { passwd => md5_hex($password), seclev => 10000 });

# Now, lets update slash.sites
if (open(SLASHSITES, "< $prefix/slash.sites")) {
	while (<SLASHSITES>) {
		chomp;
		my($dbuser) = split /:/;
		$slash_sites{$dbuser} = 1;
	}
	close(SLASHSITES);
}

unless (exists $slash_sites{$user}) {
	open(SLASHSITES, ">> $prefix/slash.sites")
		or die "Can't append to $prefix/slash.sites: $!.\n";
	print SLASHSITES "$user:$owner\n";
	close(SLASHSITES);
}

system("chown -R $owner $prefix/");

# Now, lets do the httpd.conf

sub standardadd {
	open(CONF, ">> $httpd");
	for (@standard_http) {
		print CONF "$_\n";
	}
	close(CONF);
}

sub siteadd {
	open(CONF, ">> $httpd");
	close(CONF);
}

__END__
