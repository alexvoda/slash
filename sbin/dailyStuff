#!/usr/bin/perl -w
# This code is a part of Slash, and is released under the GPL.
# Copyright 1997-2001 by Open Source Development Network. See README
# and COPYING for more information, or see http://slashcode.com/.
# $Id$

###############################################################################
# dailyStuff - this program runs various housekeeping tasks, sends out the 
# the mailing list, and compiles site statistics report and sends the report 
# to the site admin 
###############################################################################

use strict;
use File::Basename;
use File::Path;
use Slash;
use Slash::Display;
use Slash::Utility;

my $virtual_user = $ARGV[0];
createEnvironment($ARGV[0]);
my $constants = getCurrentStatic();
my $slashdb = getCurrentDB();
my $messages = getObject('Slash::Messages');

my $count = $slashdb->countDaily();

my $sdTotalHits = $slashdb->getVar('totalhits', 'value');

$sdTotalHits = $sdTotalHits + $count->{'total'};
$slashdb->setVar("totalhits", $sdTotalHits);

$slashdb->updateStamps();

my $email = <<EOT;
$constants->{sitename} Stats for yesterday

     total $count->{'total'}
    unique $count->{'unique'}
total hits $sdTotalHits
  homepage $count->{'index'}{'index'}
   indexes 
EOT

for (keys %{$count->{'index'}}) {
	$email .= "\t   $_=$count->{'index'}{$_}\n"
}

$email .= "\n-----------------------\n";

# DOESN'T WORK
# for my $key (sort { $count->{'articles'}{$b} <=> $count->{'articles'}{$a} } keys %{$count->{'articles'}}) {
# 	my $value = $count->{'articles'}{$key};
# 
# 	my $story = $slashdb->getStory($key, 'title', 'aid');
# 
# 	$email .= "$value\t$key " . substr($story->{'title'}, 0, 30) .
# 		" by $story->{'author'}\n" if $value > 100;
# }

$email .= "\n-----------------------\n";
$email .= `$constants->{slashdir}/bin/tailslash -u $virtual_user -y today`;
$email .= "\n-----------------------\n";

sub generateDailyMail {
	my $data = $slashdb->getDailyMail();

	return unless @$data;

	my @stories;
	for (@$data) {
		my(%story, @ref);
		@story{qw(sid title section author tid time dept
			introtext bodytext)} = @$_;

		1 while chomp($story{introtext});
		1 while chomp($story{bodytext});

		($story{asciitext}, @ref) = html2text(
			$story{introtext} . "\n\n" . $story{bodytext}, 74
		);

		$story{refs} = \@ref;
		push @stories, \%story;
	}

	my $newsletter = slashDisplay("dailynews",
		{ stories => \@stories, urlize => \&urlize },
		{ Return => 1, Nocomm => 1, Page => 'messages', Section => 'NONE' }
	);

	my $headlines  = slashDisplay("dailyheadlines",
		{ stories => \@stories },
		{ Return => 1, Nocomm => 1, Page => 'messages', Section => 'NONE' }
	);

	return($newsletter, $headlines);
}


sub urlize {
	local($_) = @_;
	s/^(.{62})/$1\n/g;
	s/(\S{74})/$1\n/g;
	$_ = "<URL:" . $_ . ">";
	return $_;
}

sub mailingList {
	my($newsletter, $headlines) = generateDailyMail();
	return unless $headlines;

	# need to change for specific prefs, later
	my $users = $slashdb->getMailingList();
	my $codes = $messages->getDescriptions('messagecodes');
	my %news = (
		id	=> 0,
		user	=> {},
		code	=> 1,
		message	=> $newsletter,
		fuser	=> 0,
		altto	=> '',
		date	=> time(),
		type	=> $codes->{1},
		subj	=> '',
	);

	my %head = (
		id	=> 0,
		user	=> {},
		code	=> 1,
		message	=> $headlines,
		fuser	=> 0,
		altto	=> '',
		date	=> time(),
		type	=> $codes->{1},
		subj	=> '',
	);

	for (@{$users}) {
		$news{user}{realemail} = $head{user}{realemail} = $_->[0];
		$news{user}{uid}       = $head{user}{uid}       = $_->[2];
		$news{subj} = "24 Hours of $constants->{sitename} Stories For $_->[1]";
		$head{subj} = "24 Hours of $constants->{sitename} Headlines For $_->[1]";
		$messages->send(\%news);
		$messages->send(\%head);
	}
}

sub prog2file {
	my($command, $arguments, $f) = @_;

	my $d = `$command virtual_user=$virtual_user $arguments`;
	my $dir = dirname($f);
	mkpath($dir, 0, 0755) unless -e $dir;
	if (length($d) > 0) {
		local *F;
		open F, ">$f" or die "Can't open $f: $!";
		print F $d;
		close F;
		return "1";

	} else {
		return "0";
	}
}

# Send a message to the site admin.
if ($constants->{send_mail} == 1) {
	for (@{$constants->{stats_reports}}) {
		sendEmail($_, "$constants->{sitename} Stats Report", $email, 0, 'bulk');
	}
	mailingList();
}
# Now lets clean up the database
$slashdb->deleteDaily();
